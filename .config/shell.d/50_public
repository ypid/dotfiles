#!/bin/bash
# shellcheck disable=SC2139
# .. vim: foldmarker={{{,}}}:foldmethod=marker

if [ -n "$ANDROID_ROOT" ]; then
    cd || exit
fi

## Exports {{{

## https://superuser.com/questions/479600/how-can-i-prevent-tmux-exiting-with-ctrl-d
# export IGNOREEOF=2
## Does not work with zsh

export INPUTRC="${XDG_CONFIG_HOME:-$HOME/.config}/readline/inputrc"
export ANSIBLE_NOCOWS=1

if command -v nvim >/dev/null 2>&1; then
    export EDITOR=nvim
else
    export EDITOR=vim
fi

export LANG='en_US.UTF-8'
export LANGUAGE='en_US:en'

if [ -z "$ANDROID_ROOT" ]; then
    # http://terokarvinen.com/international_iso-8601_date_on_thunderbird.html
    export LC_TIME='en_DK.UTF-8'
fi

## https://www.suse.com/releasenotes/i386/openSUSE/11.1/RELEASE-NOTES.en.html#04
export MAN_POSIXLY_CORRECT=1

RIPGREP_CONFIG_PATH="${XDG_CONFIG_HOME:-$HOME/.config}/ripgrep/ripgreprc"
export RIPGREP_CONFIG_PATH

# nnn does not have a config file :( https://github.com/jarun/nnn/wiki/Usage#configuration
# Not gonna pollute my env when I can use an alias instead.
# NNN_OPTS="e"
alias nnn='nnn -e'

## }}}

## Configure format of the `time` shell command {{{

TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S\ncpu\t%P'

## }}}

## Enable color support of ls and also add handy aliases {{{
if command -v dircolors >/dev/null 2>&1; then
    alias ls='ls --color=auto --human-readable --time-style=long-iso'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'

    ## Seems not to be needed. Does not work under Termux because $SHELL is not defined.
    # eval "$(dircolors)"
fi

## }}}

## Little functions {{{
function up {
    if [[ $1 =~ ^-?[0-9]+$ ]]
    then
        local ups=""
        # shellcheck disable=SC2034
        for fnord in $(seq 1 "$1")
        do
            ups="${ups}../"
        done
        cd "$ups" || exit 1
    elif [[ $# == 0 ]]; then
        cd ..
    fi
}

# Create a new directory and enter it.
unalias md 2>/dev/null
function md() {
    mkdir -p "$@"
    cd "$@" || return
}

function dmesg() {
    command dmesg --time-format iso "$@" || command dmesg "$@"
}

function virsh-disks() {
    virsh --quiet domblklist "$1" --details | grep '^\s*block' | while read -r line; do
        disk_path="${line##* }"
        info="$(lsblk "$disk_path" --output NAME,SIZE,TYPE --noheadings --nodeps)"
        echo "$info $line"
    done
}

function run-c() {
    echo "main(){ ${*} }" | tcc -run -
}

function subnetcalc() {
    if [[ $# == 0 ]]; then
        command subnetcalc
    else
        command subnetcalc "$@" -n
    fi
}

## https://gist.github.com/CMCDragonkai/62c04977f62037285772
function sed-keyword-escape {
    echo "$1" | sed -e 's/[]\/$*.^|[]/\\&/g'
}

function sed-replace-escape {
    echo "$1" | sed -e 's/[\/&]/\\&/g'
}

function sed-easy {
    sed -i "s/$(sed-keyword-escape "$1")/$(sed-replace-escape "$2")/g" "$3"
}

if command -v atuin >/dev/null 2>&1; then
    alias h='atuin search --human'
else
    function h {
        pattern="${1:-.}"

        if [[ "$pattern" == "." ]]; then
            omz_history -i
        else
            shift
            omz_history -i | grep -Eie "$pattern" "$@"
        fi
    }
fi

## https://stackoverflow.com/questions/1115904/shortest-way-to-swap-two-files-in-bash/1115909#1115909
## TODO: Edit/improve the answer on SO.
function swap {
    if [[ -e "$1" && -e "$2" ]]; then
        local TMPFILE="${1}.tmp.$$"
        mv "$1" "$TMPFILE" && mv "$2" "$1" && mv "$TMPFILE" "$2"
    else
        echo "Error: Make sure the files exist." 1>&2
    fi
}

function date {
    ## `date` ignores our locale settings so we fix the default format this way.
    if [[ $# == 0 ]]; then
        command date --rfc-3339=seconds
    else
        command date "$@"
    fi
}

unalias df 2>/dev/null
function df() {
    if command -v duf >/dev/null 2>&1; then
        if [[ $# == 0 ]] || [[ $1 == "-h" ]] || [[ $1 == "-hT" ]]; then
            duf --hide fuse,special,loops,binds --sort filesystem
        else
            duf "$@"
        fi
    else
        if [[ $# == 0 ]] || [[ $1 == "-h" ]] || [[ $1 == "-hT" ]]; then
            # https://github.com/prometheus/node_exporter/blob/v1.5.0/collector/filesystem_linux.go#L36-L37
            findmnt --df --types 'notmpfs,noautofs,nobinfmt_misc,nobpf,nocgroup,nocgroup2,noconfigfs,nodebugfs,nodevpts,nodevtmpfs,nofusectl,nohugetlbfs,noiso9660,nomqueue,nonsfs,nooverlay,noproc,noprocfs,nopstore,norpc_pipefs,nosecurityfs,noselinuxfs,nosquashfs,nosysfs,notracefs'
        else
            command df "$@"
        fi
    fi
}

if [[ "$ypid_dotfiles_level" == "min" ]]; then
    function sudo() {
        if [[ "$1" == "-i" ]] && [[ "$#" == 1 ]]; then
            HOME="$SSHHOME/.sshrc.d" command sudo -E zsh || HOME="$SSHHOME/.sshrc.d" command sudo -E bash
        else
            command sudo "$@"
        fi
    }
    if command -v mysql >/dev/null 2>&1; then
        function mysql() {
            if [[ -e ~$USER/.my.cnf ]]; then
                ln -s ~"$USER/.my.cnf" "$SSHHOME/.sshrc.d/"
            fi
            command "$0" "$@"
            rm -f "$SSHHOME/.sshrc.d/.my.cnf"
        }
    fi
fi

# Ref: https://stackoverflow.com/questions/11543593/grep-for-stuff-in-multiple-git-repositories/36240077#36240077
function ggrep() {
    find -L . -name .git -printf '%h\n' | while read -r repo_dir; do
        (
        echo "$(tput setaf 2)$repo_dir$(tput sgr0)"
        git -C "$repo_dir" grep -n "$@"
        )
    done
}
# Not working?
# compdef _git ggrep=git-grep
# _ggrep () { _git-grep }

# source ~/.config/dotfiles/n.sh

# Ref: https://serverfault.com/questions/59262/bash-print-stderr-in-red-color/59279#59279
function colorstd(){
    set -o pipefail
    "$@" 2> >(while read line; do echo -e "\e[01;31m$line\e[0m" >&2; done)
}

# Ref: https://stackoverflow.com/questions/60756020/print-environment-variables-sorted-by-name-including-variables-with-newlines/60756021#60756021
function env() {
    if [[ $# == 0 ]]; then
        command env --null | sort --zero-terminated | tr '\0' '\n'
    else
        command env "$@"
    fi
}

## }}}

## Shell basics {{{

alias l='ls -l'
alias ll='ls -la'
alias la='ls -a'

## }}}

## Ensure timezone is something we expect {{{

if [ "$(date '+%Z')" != 'CEST' ] && [ "$(date '+%Z')" != 'CET' ]; then
    export TZ='Europe/Berlin'
fi

## }}}

## Editor {{{

## On Debian this is provided by the alternatives systems.
## But the alternative system is global.
alias editor="$EDITOR"

alias vi='editor'
alias ,e='exit'
alias ,x='exit'
# alias less='vim -c "w! /tmp/.vimpager" -'

## }}}

## SSH {{{

alias ssh='ssh_wrapper ssh'
alias sshrc='ssh_wrapper sshrc'
alias s='ssh'
alias i='sshrc'
alias so='assh sockets'
alias sk='assh sockets flush'

ssh_default="-F /etc/ssh/ssh_config -o \"UserKnownHostsFile=$HOME/.ssh/known_hosts_tmp\""
# Should work now without this hack.
#
alias rsync-default="rsync -e \"ssh $ssh_default\""
alias ssh-default="ssh $ssh_default"
alias scp-default="scp $ssh_default"
# alias ssh-copy-id='ssh-copy-id -o PubkeyAuthentication=no'
alias sshfs='sshfs -o transform_symlinks'
alias sshfs-default='sshfs -o transform_symlinks -F /etc/ssh/ssh_config'
alias ssh-keygen-sec='ssh-keygen -o -b 8192 -a 200 -t rsa'

# Ref /usr/share/doc/pssh/README.Debian:
# > To avoid any conflicts with the putty package, all of the programs have
# > been renamed.
# I don’t care about putty, pssh is shorter and other distros like SLES use
# `pssh` as command name so I add aliases that make the commands accessible as
# `pssh` and the like.
# This has the disadvantage that scripts show `parallel-ssh` in their help text.
# Symlinking pssh to parallel-ssh in $PATH in the `install.conf.yaml` would solve it but this is less dynamic.
# The dynamic detection aspect is more important to me and creating/managing symlinks from shell config feels wrong.
if ! command -v pssh >/dev/null 2>&1 && command -v parallel-ssh >/dev/null; then
    alias pssh='parallel-ssh'
fi
if ! command -v pscp >/dev/null 2>&1 && command -v parallel-scp >/dev/null; then
    alias pscp='parallel-scp'
fi
if ! command -v prsync >/dev/null 2>&1 && command -v parallel-rsync >/dev/null; then
    alias prsync='parallel-rsync'
fi
if ! command -v pnuke >/dev/null 2>&1 && command -v parallel-nuke >/dev/null; then
    alias pnuke='parallel-nuke'
fi
if ! command -v pslurp >/dev/null 2>&1 && command -v parallel-slurp >/dev/null; then
    alias pslurp='parallel-slurp'
fi

## }}}

## Git {{{
export GITHUB_USER="ypid"
# Used in https://github.com/ypid/scripts/blob/master/git-setup-and-push-to-my-fork

# Define important shortcuts here if under bash (are already defended by oh-my-zsh) {{{
alias g='git'

## Does not distinguish between changed files and changed/dirty submodules and it looks terrible …
# alias gst='git status --short --branch'

alias ga='git add'
alias gst='git status'
alias gco='git checkout'
alias gb='git branch'
alias gc='git ci'
alias gca='gc --all'
alias gj='git j'
alias gp='git push --force-with-lease'

## Find better shortcut, move to gitconfig.
# function n() {
#     git log --reverse --pretty=%H master | grep -A 1 "$(git rev-parse HEAD)" | tail -n1 | xargs git checkout
# }
# function p() {
#     git checkout HEAD^1
# }

## }}}

## Able to push to all git remotes with the one command?
## http://stackoverflow.com/a/18674313
alias gpa='git pa'

## Use the shortcuts from oh-my-zsh for git
alias wd='git diff --color-words --no-index'

if ! command -v tig >/dev/null 2>&1; then
    alias tig='git log'
fi

alias gls='git pull --verify-signatures'

# `ge` for `get`. Easier to type than `gf` because gf is typed with the same finger on QWERTZ.
alias ge='git fetch'

# I constantly mistype `gst` as `gs` and accidentally start `ghostscript`.
alias gs='git status'

# Overwrite alias from oh-my-zsh {{{
alias glg="git log --stat --decorate=short --show-signature --date=format:'%a %Y-%m-%d %H:%M:%S%z'" # full history
alias gup='git pull --verify-signatures --recurse-submodules=on-demand'
alias gl='git pull --autostash'
# alias glg='tig --show-signature' # full history

## }}}

## }}}

## GnuPG {{{
alias gpg-check-debian-iso='gpg --no-default-keyring --keyring /usr/share/keyrings/debian-role-keys.gpg --verify'
alias gpg-sign='gpg --default-key 489A4D5EC353C98A --armor --detach-sig'

if command -v qubes-gpg-client >/dev/null 2>&1; then
    command -v compdef >/dev/null 2>&1 && compdef qubes-gpg-client=gpg
fi
## }}}

## Elastic {{{
## https://www.elastic.co/guide/en/kibana/7.7/install-plugin.html
command -v kibana-plugin >/dev/null 2>&1 && alias kibana-plugin="sudo -u kibana $(command -v kibana-plugin)"
command -v elasticsearch-keystore >/dev/null 2>&1 && alias elasticsearch-keystore="sudo -u elasticsearch $(command -v elasticsearch-keystore)"
# }}}

## User local, specific package manager: asdf {{{
# shellcheck source=/dev/null
test -f "${ASDF_DIR}/completions/asdf.bash" && source "${ASDF_DIR}/completions/asdf.bash"
## }}}

## Machine-wide package management: Platform dependent {{{

if command -v apt >/dev/null 2>&1; then
    alias ai='apt install'
    alias ap='apt purge'
    alias as='\apt search'
    alias ash='\apt show'
    alias an='apt update && apt upgrade'
elif command -v zypper >/dev/null 2>&1; then
    alias ai='zypper install --details'
    alias ap='zypper remove'
    alias as='\zypper search'
    alias ash='\zypper info'
    alias an='zypper update --details'
elif command -v dnf >/dev/null 2>&1; then
    alias ai='dnf install'
    alias ap='dnf remove'
    alias as='\dnf search'
    alias ash='\dnf info'
    alias an='dnf upgrade'
elif command -v yum >/dev/null 2>&1; then
    alias ai='yum install'
    alias ap='yum remove'
    alias as='\yum search'
    alias ash='\yum info'
    alias an='yum update'
fi

# shellcheck disable=SC1091
if [[ -e "/etc/os-release" ]] && [[ "$( . /etc/os-release && echo "$NAME" )" == "Qubes" ]]; then
    alias ai='qubes-dom0-update --action=install'
    alias as='qubes-dom0-update --action=search'
    alias an='qubes-dom0-update'
fi

# }}}

## More aliases {{{

# if [ -z "$ANDROID_ROOT" ]; then
#     alias tmux='TERM=screen-256color-bce tmux'
# fi
function tmux() {
    if [[ $# == 0 ]]; then
        command tmux new -As0
    else
        command tmux "$@"
    fi
}
alias m='task'
alias t='tmux'
alias k='kubectl'

if [ -e "$HOME/.nix-profile/bin/docker" ]; then
    # Use docker-client from Nixpkgs so that "docker compose" is available.
    alias docker='/home/user/.nix-profile/bin/docker'
fi
alias d='docker'
alias ds='docker ps --format "table {{ .ID }}\t{{ .Image }}\t{{ .Status }}"'
alias dish="docker images --format 'table {{ .ID }}   {{ .Size}}\t{{ .CreatedSince }}\t{{ .Tag }}\t{{ .Repository }}'"

# docker compose {{{

# (( ${+commands[docker-compose]} )) && dccmd='docker-compose' || dccmd='docker compose'
# Ref: https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/docker-compose/docker-compose.plugin.zsh
# This code is not compatible with Bash. Also, we want to prefer `docker
# compose`. The code from ohmyzsh prefers `docker-compose` which is a bug.

if docker compose version >/dev/null 2>&1; then
    dccmd='docker compose'
elif command -v docker-compose >/dev/null 2>&1; then
    dccmd='docker-compose'
else
    dccmd='docker compose'
fi

alias dcl="$dccmd logs --tail 100 --follow"
alias dc="$dccmd"

unset dccmd
# }}}

alias '*'='dict'
alias con='ping heise.de'
alias conn='ping6 heise.de'
alias conl='ping heise.de'
alias a='git-annex'
alias v='vagrant'
alias jj='zpool'
alias dotup='~/.config/dotfiles/install'
alias meminfo=$'awk \'$3=="kB"{$2=$2/1024;$3="MB"} 1\' /proc/meminfo | column -t'
alias last='last --time-format=iso'

# Poor humans notifyosd.zsh
alias n='notify-send -i utilities-terminal "Job done"'

## Ping on steroids. This was the last time that some messed up M$ host tricked me because it refused to answer echo requests.
alias al='nmap -n --reason -sP'

# if command -v nping >/dev/null 2>&1
# then
#     alias ping='nping'
# fi

if ! command -v hd >/dev/null 2>&1
then
    alias hd='hexdump -C'
fi

if ! command -v unp >/dev/null 2>&1 && command -v file-unpack >/dev/null 2>&1
then
    # Close enough.
    alias unp='file-unpack'
fi

# /usr/share/doc/fd-find/README.Debian
if ! command -v fd >/dev/null 2>&1 && command -v fdfind >/dev/null 2>&1
then
    alias fd='fdfind'
fi

# http://stackoverflow.com/questions/16787916/difference-between-2-directories-in-linux
alias diff-dir='diff -arq'

# difftastic
DFT_BACKGROUND='light'
export DFT_BACKGROUND

alias percent-encode='python -c "import urllib, sys; print urllib.quote(sys.argv[1])"'
alias percent-decode='python -c "import urllib, sys; print urllib.unquote(sys.argv[1])"'

alias badblocks='echo "Use badblocks_and_secure_erase."'

if [[ "$USER" != 'root' ]] && [ -z "$ANDROID_ROOT" ]; then
    alias mount='sudo mount'
    alias umount='sudo umount'
    alias smount='sudo smount'
    alias sumount='sudo sumount'

    command -v apt >/dev/null 2>&1 && alias apt='sudo apt'
    command -v zypper >/dev/null 2>&1 && alias zypper='sudo zypper'

    ## Ref: https://github.com/ypid/ypid-ansible-inventory/tree/master/group_vars/public_ypid_qubes_debops
    if [ -e /usr/local.template ]; then
        usrlocal_path='/usr/local.template'
    else
        usrlocal_path='/usr/local'
    fi
    alias sc="sudo ${usrlocal_path}/share/ypid_dotfiles/scripts/sc"
fi
if [[ "$ypid_dotfiles_level" == "min" ]]; then
    if [[ "$USER" == 'root' ]]; then
        alias sc="$SSHHOME/.sshrc.d/scripts/sc"
    else
        alias sc="sudo $SSHHOME/.sshrc.d/scripts/sc"
    fi
fi

alias rpm-keys="rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\\n'"

alias xclip-primary-to-clipboard='xclip -out | xclip -in -selection clipboard'

## Use as needed. --show-nonprinting does also output Unicode glyphs in escaped form.
# alias cat='cat --show-nonprinting'

alias ,='popd'

# https://github.com/x-motemen/ghq/issues/29#issuecomment-52584401
ghq () {
    if [ "$1" = get -a -n "$2" ]; then
        command ghq get "$2"
        cd $(command ghq list --exact --full-path "$2")
        return
    fi

    command ghq "$@"
}

# I am not fully convinced. It is not a drop-in replacement so I cannot make it
# the default as a sysadmin yet anyway.
if command -v exa >/dev/null 2>&1
then
    alias exa='exa --time-style=long-iso --group --links'
fi

if ! command -v rg >/dev/null 2>&1
then
    alias rg='grep -R'
fi

# Already use the new name even on Debian 11: https://github.com/edenhill/kcat#what-happened-to-kafkacat
if command -v kafkacat >/dev/null 2>&1 && ! command -v kcat >/dev/null 2>&1
then
    alias kcat='kafkacat'
fi

alias fq='fq --option "colors=array=black,dumpaddr=yellow,dumpheader=yellow+underline,error=brightred,false=yellow,index=black,null=brightblack,number=cyan,object=black,objectkey=brightblue,prompt_repl_level=brightblack,prompt_value=black,string=green,true=yellow,value=black"'

## }}}

## Ignore typos {{{
alias 6s='ls'
alias sl='ls'
alias fgfg='fg'
## }}}
