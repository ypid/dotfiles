#!/bin/bash
# Sourced by Bash and zsh.

___() {
    local BIN_PATHS_DIR
    local bin_path_dir

    local BIN_PATHS_DIR="$HOME/.local/share/scripts"

    test -d "${BIN_PATHS_DIR}" || exit 0

    for bin_path_dir in "${BIN_PATHS_DIR}"/*
    do
        pathprepend "${bin_path_dir}"
    done
} && ___
unset -f ___

if [ -d "/nix/var/nix/" ]
then
    NIX_REMOTE=daemon
    export NIX_REMOTE

    # /usr/lib/environment.d/nix-daemon.conf is not sourced here but it does
    # not hurt if it was sourced outside of my dotfiles.
    #
    # pathprepend pro:
    #
    # * Allows to install a more recent nix version that overrules the one
    #   provided by nix-bin on Debian.
    #
    # pathappend pro:
    #
    # * Causes versions of nix-env to be used inside impure nix-shells.
    #
    pathprepend "${HOME}/.nix-profile/bin"

    # Remove default profile from my PATH. Only programs that the user installs
    # should be in the path.
    remove_from_path '/nix/var/nix/profiles/default/bin'

    # NIX_PATH="${HOME}/.nix-defexpr/channels/"
    # export NIX_PATH
fi

pathappend "${HOME}/.krew/bin"
pathappend "/usr/local/bin"
pathappend "/usr/sbin"

export ASDF_DIR="$HOME/.asdf-writable"
pathprepend "${ASDF_DIR}/shims"
pathappend "${ASDF_DIR}/bin"

# This is normally loaded by /etc/profile.d/safe-rm.sh but zsh does not source
# this file so we set the PATH here.
# Interestingly, on Qubes OS, /etc/profile.d/safe-rm.sh is still sourced which
# made this issue difficult to debug. But on bare metal Debian, it is not
# sourced as expected.
pathprepend "/usr/share/safe-rm/bin"

pathprepend "$HOME/bin"

## PATH and related environment configuration {{{
user_install_dir="${HOME}/.local/usr"
if [ -d "$user_install_dir" ]
then

    pathprepend "${HOME}/.local/bin"
    pathappend "$user_install_dir/bin"

    ## Python {{{
    # Use pipx instead.
    # export PYTHONUSERBASE="$user_install_dir/python"
    # pathprepend "$PYTHONUSERBASE/bin"
    # export PYTHONPATH="$PYTHONUSERBASE:$PYTHONPATH"
    export PYTHONSTARTUP="${HOME}/.config/python/startup"
    ## }}}

    ## Node.js {{{
    export NPM_PACKAGES="$user_install_dir/npm"
    pathappend "$NPM_PACKAGES/bin"

    if command -v manpath >/dev/null 2>&1; then
        unset MANPATH
        export MANPATH
        MANPATH="$(manpath)"
    fi
    MANPATH="$NPM_PACKAGES/share/man:$MANPATH"
    export NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"
    ## }}}
fi
## }}}
